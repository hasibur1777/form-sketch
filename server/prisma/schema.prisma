
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String          @id @default(uuid()) @db.Uuid
  name      String
  email     String          @unique
  password  String
  role      String          @default("user")
  createdAt DateTime        @default(now())

  // Relations
  templates FormTemplates[] // a user can create many form templates
  responses FormResponses[] // a user can submit many responses
  sharedForms FormSharing[] // forms shared with this user
}

model FormTemplates {
  id         String          @id @default(uuid()) @db.Uuid
  name       String
  structure  Json            @default("{}")
  createdBy  String          @db.Uuid
  updatedAt  DateTime        @default(now())
  createdAt  DateTime        @default(now())

  // Relations
  creator    User            @relation(fields: [createdBy], references: [id])
  responses  FormResponses[] // a template can have many responses
  formSharing FormSharing[] // relation to form sharing
}

model FormResponses {
  id            String        @id @default(uuid()) @db.Uuid
  template_id   String        @db.Uuid
  response_data Json          @default("{}")
  q_structure   Json          @default("{}")
  createdBy     String        @db.Uuid
  updatedAt     DateTime      @default(now())
  createdAt     DateTime      @default(now())

  // Relations
  template      FormTemplates @relation(fields: [template_id], references: [id])
  creator       User          @relation(fields: [createdBy], references: [id])
}

model FormSharing {
  id               String       @id @default(uuid()) @db.Uuid
  templateId       String       @db.Uuid
  sharedWithUserId String       @db.Uuid
  createdAt        DateTime     @default(now())

  // Relations
  template         FormTemplates @relation(fields: [templateId], references: [id])
  sharedWith       User         @relation(fields: [sharedWithUserId], references: [id])
}
